name: Build and deploy AWS Lambda OPA extension layer
on:
  release:
    types: [published]
  repository_dispatch:
    types: [opa-release-created]
    payload:
      owner: open-policy-agent
      repo: opa
  workflow_dispatch:
    inputs:
      tag_name:
        description: "OPA release tag name"
        required: true
        type: string
env:
  TAG_NAME: ${{ github.event.inputs.tag_name || github.event.release.tag_name }}
jobs:
  build-layer-amd64:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.inputs.tag_name || github.event.release.tag_name, 'v') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install zip -y
          sudo apt-get install awscli -y
      - name: Download OPA assets (AMD64)
        run: |
          curl -L https://github.com/open-policy-agent/opa/releases/download/${{ env.TAG_NAME }}/opa_linux_amd64_static -o src/opa/opa
      - name: Build Lambda layer (AMD64)
        run: |
          cd src
          zip -r ../opa-layer-amd64.zip *
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Upload layer to S3
        run: |
          aws s3 cp opa-layer-amd64.zip s3://${{ secrets.S3_BUCKET }}/opa-layer/${{ env.TAG_NAME }}/opa-layer-amd64.zip
      - name: Create Lambda layer version (AMD64)
        run: |
          aws_regions=("us-east-1" "us-east-2" "us-west-1" "us-west-2" "af-south-1" "ap-east-1" "ap-south-1" "ap-northeast-3" "ap-northeast-2" "ap-southeast-1" "ap-southeast-2" "ap-northeast-1" "ca-central-1" "eu-central-1" "eu-west-1" "eu-west-2" "eu-south-1" "eu-west-3" "eu-north-1" "me-south-1" "sa-east-1")
          for region in "${aws_regions[@]}"; do
            layer_arn=$(aws lambda publish-layer-version \
              --region $region \
              --layer-name opa-layer \
              --description "OPA Layer $TAG_NAME (AMD64)" \
              --license-info "Apache-2.0" \
              --zip-file fileb://opa-layer-amd64.zip \
              --compatible-architectures x86_64 \
              --query LayerVersionArn \
              --output text)
            echo ::set-output name=layer-arn::$layer_arn
          done
  build-layer-arm64:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.inputs.tag_name || github.event.release.tag_name, 'v') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install zip -y
          sudo apt-get install awscli -y
      - name: Download OPA assets (ARM64)
        run: |
          curl -L https://github.com/open-policy-agent/opa/releases/download/${{ env.TAG_NAME }}/opa_linux_arm64_static -o src/opa/opa
      - name: Build Lambda layer (ARM64)
        run: |
          cd src
          zip -r ../opa-layer-arm64.zip *
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Upload layer to S3
        run: |
          aws s3 cp opa-layer-arm64.zip s3://${{ secrets.S3_BUCKET }}/opa-layer/${{ env.TAG_NAME }}/opa-layer-arm64.zip
      - name: Create Lambda layer version (ARM64)
        run: |
          aws_regions=("us-east-1" "us-east-2" "us-west-1" "us-west-2" "af-south-1" "ap-east-1" "ap-south-1" "ap-northeast-3" "ap-northeast-2" "ap-southeast-1" "ap-southeast-2" "ap-northeast-1" "ca-central-1" "eu-central-1" "eu-west-1" "eu-west-2" "eu-south-1" "eu-west-3" "eu-north-1" "me-south-1" "sa-east-1")
          for region in "${aws_regions[@]}"; do
            layer_arn=$(aws lambda publish-layer-version \
              --region $region \
              --layer-name opa-layer \
              --description "OPA Layer $TAG_NAME (ARM64)" \
              --license-info "Apache-2.0" \
              --zip-file fileb://opa-layer-arm64.zip \
              --compatible-architectures arm64 \
              --query LayerVersionArn \
              --output text)
            echo ::set-output name=layer-arn::$layer_arn
          done